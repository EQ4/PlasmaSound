com.noisepages.nettoyeur.bluetooth.BluetoothSppConnection -> com.noisepages.nettoyeur.bluetooth.d:
    java.util.UUID SPP_UUID -> a
    com.noisepages.nettoyeur.bluetooth.BluetoothSppReceiver receiver -> b
    int bufferSize -> c
    com.noisepages.nettoyeur.bluetooth.BluetoothSppConnection$State connectionState -> d
    com.noisepages.nettoyeur.bluetooth.BluetoothSppConnection$ConnectThread connectThread -> e
    com.noisepages.nettoyeur.bluetooth.BluetoothSppConnection$ConnectedThread connectedThread -> f
    void stop() -> a
    void connected$73068652(android.bluetooth.BluetoothSocket) -> a
    void cancelConnectedThread() -> b
    void access$0$3792b4e0(com.noisepages.nettoyeur.bluetooth.BluetoothSppConnection,android.bluetooth.BluetoothSocket) -> a
    void access$1(com.noisepages.nettoyeur.bluetooth.BluetoothSppConnection) -> a
    int access$2(com.noisepages.nettoyeur.bluetooth.BluetoothSppConnection) -> b
    com.noisepages.nettoyeur.bluetooth.BluetoothSppReceiver access$3(com.noisepages.nettoyeur.bluetooth.BluetoothSppConnection) -> c
    void access$4(com.noisepages.nettoyeur.bluetooth.BluetoothSppConnection) -> d
com.noisepages.nettoyeur.bluetooth.BluetoothSppConnection$ConnectThread -> com.noisepages.nettoyeur.bluetooth.g:
    android.bluetooth.BluetoothSocket socket -> a
    com.noisepages.nettoyeur.bluetooth.BluetoothSppConnection this$0 -> b
    void run() -> run
    void access$1(com.noisepages.nettoyeur.bluetooth.BluetoothSppConnection$ConnectThread) -> a
com.noisepages.nettoyeur.bluetooth.BluetoothSppConnection$ConnectedThread -> com.noisepages.nettoyeur.bluetooth.a:
    android.bluetooth.BluetoothSocket socket -> a
    java.io.InputStream inStream -> b
    java.io.OutputStream outStream -> c
    com.noisepages.nettoyeur.bluetooth.BluetoothSppConnection this$0 -> d
    void run() -> run
    void access$2(com.noisepages.nettoyeur.bluetooth.BluetoothSppConnection$ConnectedThread) -> a
com.noisepages.nettoyeur.bluetooth.BluetoothSppConnection$State -> com.noisepages.nettoyeur.bluetooth.b:
    com.noisepages.nettoyeur.bluetooth.BluetoothSppConnection$State NONE -> a
    com.noisepages.nettoyeur.bluetooth.BluetoothSppConnection$State CONNECTING -> c
    com.noisepages.nettoyeur.bluetooth.BluetoothSppConnection$State CONNECTED -> b
    com.noisepages.nettoyeur.bluetooth.BluetoothSppConnection$State[] ENUM$VALUES -> d
    com.noisepages.nettoyeur.bluetooth.BluetoothSppConnection$State[] values() -> values
    com.noisepages.nettoyeur.bluetooth.BluetoothSppConnection$State valueOf(java.lang.String) -> valueOf
com.noisepages.nettoyeur.bluetooth.BluetoothSppObserver -> com.noisepages.nettoyeur.bluetooth.f:
    void onConnectionFailed() -> a
    void onConnectionLost() -> b
com.noisepages.nettoyeur.bluetooth.BluetoothSppReceiver -> com.noisepages.nettoyeur.bluetooth.c:
    void onBytesReceived(int,byte[]) -> a
com.noisepages.nettoyeur.bluetooth.DeviceListActivity -> com.noisepages.nettoyeur.bluetooth.DeviceListActivity:
    android.bluetooth.BluetoothAdapter btAdapter -> a
    android.widget.ArrayAdapter pairedDevicesAdapter -> b
    boolean empty -> c
    android.widget.AdapterView$OnItemClickListener clickListener -> d
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    boolean access$0(com.noisepages.nettoyeur.bluetooth.DeviceListActivity) -> a
com.noisepages.nettoyeur.bluetooth.DeviceListActivity$1 -> com.noisepages.nettoyeur.bluetooth.e:
    com.noisepages.nettoyeur.bluetooth.DeviceListActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.noisepages.nettoyeur.bluetooth.midi.BluetoothMidiReceiver -> com.noisepages.nettoyeur.bluetooth.midi.d:
com.noisepages.nettoyeur.bluetooth.midi.BluetoothMidiService -> com.noisepages.nettoyeur.bluetooth.midi.BluetoothMidiService:
    android.os.Binder binder -> a
    com.noisepages.nettoyeur.bluetooth.BluetoothSppConnection btConnection -> b
    com.noisepages.nettoyeur.bluetooth.midi.BluetoothMidiReceiver receiver -> c
    com.noisepages.nettoyeur.bluetooth.midi.BluetoothMidiService$State midiState -> d
    int channel -> e
    int firstByte -> f
    com.noisepages.nettoyeur.bluetooth.BluetoothSppReceiver sppReceiver -> g
    int[] $SWITCH_TABLE$com$noisepages$nettoyeur$bluetooth$midi$BluetoothMidiService$State -> h
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnbind(android.content.Intent) -> onUnbind
    void onDestroy() -> onDestroy
    void stop() -> a
    void access$0(com.noisepages.nettoyeur.bluetooth.midi.BluetoothMidiService,int) -> a
    com.noisepages.nettoyeur.bluetooth.midi.BluetoothMidiReceiver access$1(com.noisepages.nettoyeur.bluetooth.midi.BluetoothMidiService) -> a
    int[] $SWITCH_TABLE$com$noisepages$nettoyeur$bluetooth$midi$BluetoothMidiService$State() -> b
com.noisepages.nettoyeur.bluetooth.midi.BluetoothMidiService$1 -> com.noisepages.nettoyeur.bluetooth.midi.b:
    com.noisepages.nettoyeur.bluetooth.midi.BluetoothMidiService this$0 -> a
    void onBytesReceived(int,byte[]) -> a
    void onConnectionFailed() -> a
    void onConnectionLost() -> b
com.noisepages.nettoyeur.bluetooth.midi.BluetoothMidiService$BluetoothMidiBinder -> com.noisepages.nettoyeur.bluetooth.midi.c:
    com.noisepages.nettoyeur.bluetooth.midi.BluetoothMidiService this$0 -> a
com.noisepages.nettoyeur.bluetooth.midi.BluetoothMidiService$State -> com.noisepages.nettoyeur.bluetooth.midi.a:
    com.noisepages.nettoyeur.bluetooth.midi.BluetoothMidiService$State NOTE_OFF -> a
    com.noisepages.nettoyeur.bluetooth.midi.BluetoothMidiService$State NOTE_ON -> b
    com.noisepages.nettoyeur.bluetooth.midi.BluetoothMidiService$State POLY_TOUCH -> c
    com.noisepages.nettoyeur.bluetooth.midi.BluetoothMidiService$State CONTROL_CHANGE -> d
    com.noisepages.nettoyeur.bluetooth.midi.BluetoothMidiService$State PROGRAM_CHANGE -> e
    com.noisepages.nettoyeur.bluetooth.midi.BluetoothMidiService$State AFTERTOUCH -> f
    com.noisepages.nettoyeur.bluetooth.midi.BluetoothMidiService$State PITCH_BEND -> g
    com.noisepages.nettoyeur.bluetooth.midi.BluetoothMidiService$State NONE -> h
    com.noisepages.nettoyeur.bluetooth.midi.BluetoothMidiService$State[] ENUM$VALUES -> i
    com.noisepages.nettoyeur.bluetooth.midi.BluetoothMidiService$State[] values() -> values
    com.noisepages.nettoyeur.bluetooth.midi.BluetoothMidiService$State valueOf(java.lang.String) -> valueOf
com.rj.processing.mt.Cursor -> com.rj.processing.a.c:
    com.rj.processing.mt.Point firstPoint -> a
    java.util.ArrayList points -> b
    com.rj.processing.mt.Point currentPoint -> c
    int curId -> d
    float velX -> e
    float velY -> f
com.rj.processing.mt.MTManager -> com.rj.processing.a.a:
    java.util.ArrayList points -> b
    java.util.ArrayList cursors -> a
    java.util.ArrayList listeners -> c
    void addTouchListener(com.rj.processing.mt.TouchListener) -> a
    void surfaceTouchEvent(android.view.MotionEvent) -> a
    void fireTouchAllUp$1e7df18c$5bb818bf() -> a
com.rj.processing.mt.Point -> com.rj.processing.a.b:
    float x -> a
    float y -> b
    long time -> c
com.rj.processing.mt.TouchListener -> com.rj.processing.a.d:
    void touchDown(com.rj.processing.mt.Cursor) -> a
    void touchUp(com.rj.processing.mt.Cursor) -> c
    void touchMoved(com.rj.processing.mt.Cursor) -> b
    void touchAllUp$5bb818bf() -> u
com.rj.processing.plasmasound.PlasmaSound -> com.rj.processing.plasmasound.PlasmaSound:
    com.rj.processing.mt.MTManager mtManager -> p
    com.rj.processing.plasmasoundhd.Visualization vis -> q
    com.rj.processing.plasmasoundhd.pd.PDManager pdman -> k
    com.rj.processing.plasmasoundhd.pd.instruments.Instrument inst -> l
    boolean touchupdated -> r
    boolean pdready -> m
    boolean startingup -> n
    java.lang.Runnable readyrunnable -> s
    android.view.View loadingview -> o
    android.os.AsyncTask asyncSetup -> t
    int sketchWidth() -> b
    int sketchHeight() -> c
    java.lang.String sketchRenderer() -> d
    void onCreate(android.os.Bundle) -> onCreate
    void setup() -> f
    boolean surfaceTouchEvent(android.view.MotionEvent) -> a
    void touchAllUp$5bb818bf() -> u
    void touchDown(com.rj.processing.mt.Cursor) -> a
    void touchMoved(com.rj.processing.mt.Cursor) -> b
    void touchUp(com.rj.processing.mt.Cursor) -> c
    void draw() -> g
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void readSettings() -> v
    com.rj.processing.plasmasoundhd.pd.instruments.Instrument getInst() -> e
    com.rj.processing.mt.MTManager getMTManager() -> a
com.rj.processing.plasmasound.PlasmaSound$1 -> com.rj.processing.plasmasound.b:
    com.rj.processing.plasmasound.PlasmaSound this$0 -> a
    void run() -> run
com.rj.processing.plasmasound.PlasmaSound$1$1 -> com.rj.processing.plasmasound.a:
    com.rj.processing.plasmasound.PlasmaSound$1 this$1 -> a
    void run() -> run
com.rj.processing.plasmasound.PlasmaSound$2 -> com.rj.processing.plasmasound.c:
    com.rj.processing.plasmasound.PlasmaSound this$0 -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.rj.processing.plasmasound.PlasmaThereminAudioSettings -> com.rj.processing.plasmasound.PlasmaThereminAudioSettings:
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
com.rj.processing.plasmasound.PlasmaThereminEffectsSettings -> com.rj.processing.plasmasound.PlasmaThereminEffectsSettings:
    void onCreate(android.os.Bundle) -> onCreate
com.rj.processing.plasmasoundhd.Launcher -> com.rj.processing.plasmasoundhd.Launcher:
    int GINGERBREAD_PHONE -> a
    int HONEYCOMB_TABLET -> b
    int ICS_PHONE -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    int getUIType() -> a
com.rj.processing.plasmasoundhd.PlasmaActivity -> com.rj.processing.plasmasoundhd.c:
    com.rj.processing.mt.MTManager getMTManager() -> a
    com.rj.processing.plasmasoundhd.pd.instruments.Instrument getInst() -> e
com.rj.processing.plasmasoundhd.PlasmaSound -> com.rj.processing.plasmasoundhd.PlasmaSound:
    com.rj.processing.mt.MTManager mtManager -> p
    com.rj.processing.plasmasoundhd.Visualization vis -> q
    com.rj.processing.plasmasoundhd.pd.PDManager pdman -> k
    com.rj.processing.plasmasoundhd.pd.instruments.Instrument inst -> l
    com.rj.processing.plasmasoundhd.pd.instruments.Preset preset -> r
    android.os.PowerManager$WakeLock wl -> s
    boolean touchupdated -> t
    boolean pdready -> m
    boolean startingup -> n
    java.lang.Runnable readyrunnable -> u
    android.view.View loadingview -> o
    android.view.View preferenceview -> v
    android.os.AsyncTask asyncSetup -> w
    int sketchWidth() -> b
    int sketchHeight() -> c
    java.lang.String sketchRenderer() -> d
    void onCreate(android.os.Bundle) -> onCreate
    void setup() -> f
    boolean surfaceTouchEvent(android.view.MotionEvent) -> a
    void touchAllUp$5bb818bf() -> u
    void touchDown(com.rj.processing.mt.Cursor) -> a
    void touchMoved(com.rj.processing.mt.Cursor) -> b
    void touchUp(com.rj.processing.mt.Cursor) -> c
    void draw() -> g
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void hideBoth() -> w
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void readSettings() -> v
    void onBackPressed() -> onBackPressed
    com.rj.processing.plasmasoundhd.pd.instruments.Instrument getInst() -> e
    com.rj.processing.mt.MTManager getMTManager() -> a
com.rj.processing.plasmasoundhd.PlasmaSound$1 -> com.rj.processing.plasmasoundhd.b:
    com.rj.processing.plasmasoundhd.PlasmaSound this$0 -> a
    void run() -> run
com.rj.processing.plasmasoundhd.PlasmaSound$1$1 -> com.rj.processing.plasmasoundhd.e:
    com.rj.processing.plasmasoundhd.PlasmaSound$1 this$1 -> a
    void run() -> run
com.rj.processing.plasmasoundhd.PlasmaSound$2 -> com.rj.processing.plasmasoundhd.a:
    com.rj.processing.plasmasoundhd.PlasmaSound this$0 -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.rj.processing.plasmasoundhd.Visualization -> com.rj.processing.plasmasoundhd.d:
    processing.core.PApplet p -> a
    java.util.ArrayList visuals -> b
    void addVisual(com.rj.processing.plasmasoundhd.visuals.Visual) -> a
    void drawVisuals() -> a
    void touchEvent$6967f38f$6348cc67$33bb90d2(float,float,float,float) -> a
com.rj.processing.plasmasoundhd.pd.PDManager -> com.rj.processing.plasmasoundhd.a.a:
    processing.core.PApplet p -> a
    android.widget.Toast toast -> b
    com.rj.processing.plasmasoundhd.pd.PDManager$AudioStatListener reciever -> c
    void toast(java.lang.String) -> b
    void onResume(java.lang.Runnable) -> a
    void onResume() -> a
    void finish() -> b
    int openPatch(java.lang.String) -> a
    android.widget.Toast access$0(com.rj.processing.plasmasoundhd.pd.PDManager) -> a
    void access$1(com.rj.processing.plasmasoundhd.pd.PDManager,android.widget.Toast) -> a
com.rj.processing.plasmasoundhd.pd.PDManager$1 -> com.rj.processing.plasmasoundhd.a.b:
    com.rj.processing.plasmasoundhd.pd.PDManager this$0 -> a
    java.lang.String val$msg -> b
    void run() -> run
com.rj.processing.plasmasoundhd.pd.PDManager$2 -> com.rj.processing.plasmasoundhd.a.c:
    com.rj.processing.plasmasoundhd.pd.PDManager this$0 -> a
    java.lang.Runnable val$callback -> b
    void run() -> run
com.rj.processing.plasmasoundhd.pd.PDManager$AudioStatListener -> com.rj.processing.plasmasoundhd.a.d:
    float audiolevel -> a
    com.rj.processing.plasmasoundhd.pd.PDManager this$0 -> b
com.rj.processing.plasmasoundhd.pd.effects.ASDR -> com.rj.processing.plasmasoundhd.a.a.a:
    com.rj.processing.plasmasoundhd.pd.instruments.Parameter attack -> d
    com.rj.processing.plasmasoundhd.pd.instruments.Parameter sustain -> e
    com.rj.processing.plasmasoundhd.pd.instruments.Parameter decay -> f
    com.rj.processing.plasmasoundhd.pd.instruments.Parameter release -> g
com.rj.processing.plasmasoundhd.pd.effects.Delay -> com.rj.processing.plasmasoundhd.a.a.d:
com.rj.processing.plasmasoundhd.pd.effects.Effect -> com.rj.processing.plasmasoundhd.a.a.h:
    java.util.HashMap params -> a
    boolean yenabled -> b
    java.lang.String[] yenabledlist -> c
    boolean enabled -> d
    void touchUp(android.view.MotionEvent,int,float,float,com.rj.processing.mt.Cursor) -> b
    void touchMove$59917c7d(int,float) -> a
    void touchDown(android.view.MotionEvent,int,float,float,com.rj.processing.mt.Cursor) -> a
    void updateSettings$99c14a7(android.content.SharedPreferences) -> a
com.rj.processing.plasmasoundhd.pd.effects.Filter -> com.rj.processing.plasmasoundhd.a.a.e:
com.rj.processing.plasmasoundhd.pd.effects.Reverb -> com.rj.processing.plasmasoundhd.a.a.c:
com.rj.processing.plasmasoundhd.pd.effects.Tremolo -> com.rj.processing.plasmasoundhd.a.a.f:
com.rj.processing.plasmasoundhd.pd.effects.Vibrato -> com.rj.processing.plasmasoundhd.a.a.b:
com.rj.processing.plasmasoundhd.pd.effects.Volume -> com.rj.processing.plasmasoundhd.a.a.g:
    com.rj.processing.plasmasoundhd.pd.instruments.Parameter amp -> d
    com.rj.processing.plasmasoundhd.pd.instruments.Parameter ampglobal -> e
    com.rj.processing.plasmasoundhd.pd.instruments.Parameter on -> f
    com.rj.processing.plasmasoundhd.pd.instruments.Parameter off -> g
    void setVolume$133aeb() -> a
    void touchDown(android.view.MotionEvent,int,float,float,com.rj.processing.mt.Cursor) -> a
    void touchUp(android.view.MotionEvent,int,float,float,com.rj.processing.mt.Cursor) -> b
com.rj.processing.plasmasoundhd.pd.instruments.Instrument -> com.rj.processing.plasmasoundhd.a.b.a:
    com.rj.processing.plasmasoundhd.pd.PDManager p -> g
    java.util.ArrayList effects -> h
    com.rj.processing.plasmasoundhd.pd.effects.Volume volume -> i
    int patch -> j
    java.lang.String patchName -> k
    float midiMin -> a
    float midiMax -> b
    int NCONTINUOUS -> c
    int NQUANTIZE -> d
    int NSLIDE -> l
    int quantize -> e
    float maxVol -> m
    float maxFilt -> n
    boolean vol_y -> o
    boolean filt_y -> p
    boolean ready -> f
    void setPatch(java.lang.String) -> a
    void touchUp$191ca6bd(int,float,float,com.rj.processing.mt.Cursor) -> a
    void touchMove$191ca6bd(int,float,float,float,float,com.rj.processing.mt.Cursor) -> a
    void touchDown$191ca6bd(int,float,float,float,float,com.rj.processing.mt.Cursor) -> b
    void allUp() -> a
    void setMidiMin$133aeb() -> b
    void setMidiMax$133aeb() -> c
    void setPitch(float,int,com.rj.processing.mt.Cursor,float) -> a
    boolean isCursorSnapped(com.rj.processing.mt.Cursor,float) -> a
    void updateSettings(android.content.SharedPreferences) -> a
com.rj.processing.plasmasoundhd.pd.instruments.Parameter -> com.rj.processing.plasmasoundhd.a.b.c:
    java.lang.String name -> a
    boolean enabled -> b
    boolean global -> c
    float min -> d
    float max -> e
    float defaultval -> f
    void setMinMax(float,float) -> a
    java.lang.String getName() -> a
    void setDefault(float) -> a
    void setDefaultNaive(float) -> b
    float normalizeValue(float) -> d
    void pushNormalValue(float) -> e
    void pushNormalValue(float,int) -> c
    void pushValue(float) -> c
    void pushValue(float,int) -> a
    void pushValueNaive(float,int) -> b
    void pushDefaultNaive(int) -> a
com.rj.processing.plasmasoundhd.pd.instruments.Preset -> com.rj.processing.plasmasoundhd.a.b.b:
    java.lang.String PRESETS -> a
com.rj.processing.plasmasoundhd.visuals.AudioStats -> com.rj.processing.plasmasoundhd.b.d:
    void drawVis() -> a
    void touchEvent$6348cc67(float,float,float,float) -> a
com.rj.processing.plasmasoundhd.visuals.Grid -> com.rj.processing.plasmasoundhd.b.b:
    int num_lines -> d
    float crosshair_size -> e
    com.rj.processing.plasmasoundhd.PlasmaActivity pp -> f
    void drawVis() -> a
    void touchEvent$6348cc67(float,float,float,float) -> a
com.rj.processing.plasmasoundhd.visuals.PlasmaFluid -> com.rj.processing.plasmasoundhd.b.a:
    float FLUID_WIDTH -> d
    msafluid.MSAFluidSolver2D fluidSolver -> e
    processing.core.PImage imgFluid -> f
    void drawVis() -> a
    void touchEvent$6348cc67(float,float,float,float) -> a
com.rj.processing.plasmasoundhd.visuals.Visual -> com.rj.processing.plasmasoundhd.b.c:
    processing.core.PApplet p -> a
    float width -> b
    float height -> c
    void drawVis() -> a
    void touchEvent$6348cc67(float,float,float,float) -> a
msafluid.MSAFluidSolver2D -> a.a:
    float[] r -> a
    float[] g -> b
    float[] b -> c
    float[] u -> i
    float[] v -> j
    float[] rOld -> d
    float[] gOld -> e
    float[] bOld -> f
    float[] uOld -> g
    float[] vOld -> h
    java.lang.String VERSION -> k
    float width -> l
    float height -> m
    float invWidth -> n
    float invHeight -> o
    int _NX -> p
    int _NY -> q
    int _numCells -> r
    float _invNX -> s
    float _invNY -> t
    float _invNumCells -> u
    float _dt -> v
    boolean _isInited -> w
    boolean _isRGB -> x
    int _solverIterations -> y
    float visc -> z
    float _fadeSpeed -> A
    float[] _tmp -> B
    float _avgDensity -> C
    float uniformity -> D
    float _avgSpeed -> E
    msafluid.MSAFluidSolver2D setDeltaT$33c0278() -> a
    msafluid.MSAFluidSolver2D setFadeSpeed$33c0278() -> b
    msafluid.MSAFluidSolver2D setSolverIterations$78b3ab0b() -> c
    msafluid.MSAFluidSolver2D enableRGB$3701d79c() -> d
    msafluid.MSAFluidSolver2D setVisc$33c0278() -> e
    int getIndexForNormalizedPosition(float,float) -> a
    int getNumCells() -> f
    int getWidth() -> g
    int getHeight() -> h
    void update() -> i
    void advect$d175eda(float[],float[],float[],float[]) -> a
    void project(float[],float[],float[],float[]) -> b
    void linearSolver$7640c704(float[],float[],float,float) -> a
    void swapU() -> j
    void swapV() -> k
    void swapRGB() -> l
org.puredata.android.io.AudioParameters -> org.puredata.android.a.g:
    int sampleRate -> a
    int inputChannels -> b
    int outputChannels -> c
    float bufsizeMillis -> d
    int suggestSampleRate() -> a
    int suggestInputChannels() -> b
    int suggestOutputChannels() -> c
    float suggestBufferSizeMillis() -> d
    boolean checkParameters(int,int,int) -> a
    boolean checkInputParameters(int,int) -> a
    boolean checkOutputParameters(int,int) -> b
org.puredata.android.io.AudioRecordWrapper -> org.puredata.android.a.i:
    android.media.AudioRecord rec -> a
    int bufSizeShorts -> b
    java.util.concurrent.BlockingQueue queue -> c
    java.lang.Thread inputThread -> d
    void start() -> a
    void stop() -> b
    void release() -> c
    short[] poll() -> d
    short[] take() -> e
    int access$0(org.puredata.android.io.AudioRecordWrapper) -> a
    android.media.AudioRecord access$1(org.puredata.android.io.AudioRecordWrapper) -> b
    java.util.concurrent.BlockingQueue access$2(org.puredata.android.io.AudioRecordWrapper) -> c
org.puredata.android.io.AudioRecordWrapper$1 -> org.puredata.android.a.f:
    org.puredata.android.io.AudioRecordWrapper this$0 -> a
    void run() -> run
org.puredata.android.io.AudioWrapper -> org.puredata.android.a.b:
    org.puredata.android.io.AudioRecordWrapper rec -> d
    android.media.AudioTrack track -> e
    short[] outBuf -> a
    int inputSizeShorts -> b
    int bufSizeShorts -> c
    java.lang.Thread audioThread -> f
    int process(short[],short[]) -> a
    void start(android.content.Context) -> a
    void stop() -> c
    void release() -> a
    boolean isRunning() -> b
    org.puredata.android.io.AudioRecordWrapper access$0(org.puredata.android.io.AudioWrapper) -> a
    android.media.AudioTrack access$1(org.puredata.android.io.AudioWrapper) -> b
org.puredata.android.io.AudioWrapper$1 -> org.puredata.android.a.d:
    org.puredata.android.io.AudioWrapper this$0 -> a
    void run() -> run
org.puredata.android.io.PdAudio -> org.puredata.android.a.c:
    org.puredata.android.io.AudioWrapper audioWrapper -> a
    void initAudio$2e711841(int) -> a
    void startAudio(android.content.Context) -> a
    void stopAudio() -> a
    boolean isRunning() -> b
org.puredata.android.io.PdAudio$1 -> org.puredata.android.a.j:
    int process(short[],short[]) -> a
org.puredata.android.io.VersionedAudioFormat -> org.puredata.android.a.h:
    boolean hasEclair -> a
    int getInFormat(int) -> a
    int getOutFormat(int) -> b
org.puredata.android.io.VersionedAudioFormat$FormatCupcake -> org.puredata.android.a.a:
    int getInFormat(int) -> a
    int getOutFormat(int) -> b
org.puredata.android.io.VersionedAudioFormat$FormatEclair -> org.puredata.android.a.e:
    int getInFormat(int) -> a
    int getOutFormat(int) -> b
org.puredata.android.service.PdPreferences -> org.puredata.android.service.PdPreferences:
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
org.puredata.android.service.PdService -> org.puredata.android.service.PdService:
    org.puredata.android.service.PdService$PdBinder binder -> a
    boolean hasEclair -> b
    org.puredata.android.service.PdService$ForegroundManager fgManager -> c
    int sampleRate -> d
    int inputChannels -> e
    int outputChannels -> f
    float bufferSizeMillis -> g
    void stopAudio() -> a
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    void onStart(android.content.Intent,int) -> onStart
    void onDestroy() -> onDestroy
    void access$0$2c13a015(org.puredata.android.service.PdService) -> a
org.puredata.android.service.PdService$ForegroundCupcake -> org.puredata.android.service.c:
    boolean hasForeground -> a
    org.puredata.android.service.PdService this$0 -> b
    void stopForeground() -> b
    void versionedStop() -> a
org.puredata.android.service.PdService$ForegroundEclair -> org.puredata.android.service.a:
    org.puredata.android.service.PdService this$0 -> a
    void versionedStop() -> a
org.puredata.android.service.PdService$ForegroundManager -> org.puredata.android.service.b:
    void stopForeground() -> b
org.puredata.android.service.PdService$PdBinder -> org.puredata.android.service.d:
    org.puredata.android.service.PdService this$0 -> a
org.puredata.android.utils.Properties -> org.puredata.android.b.a:
    int version -> a
    boolean hasArmeabiV7a -> b
org.puredata.core.PdBase -> org.puredata.core.PdBase:
    java.util.Map bindings -> a
    java.util.Map patches -> b
    void computeAudio$1385ff() -> a
    void release() -> b
    void setReceiver(org.puredata.core.PdReceiver) -> setReceiver
    int openAudio(int,int,int,int) -> openAudio
    int process(short[],short[]) -> process
    int openPatch(java.io.File) -> a
    int openPatch(java.lang.String) -> a
    int sendFloat(java.lang.String,float) -> sendFloat
    int sendMessage(java.lang.String,java.lang.String,java.lang.Object[]) -> a
    int blockSize() -> blockSize
    void setMidiReceiver(org.puredata.core.PdMidiReceiver) -> setMidiReceiver
    void initialize() -> initialize
    int startMessage() -> startMessage
    void addFloat(float) -> addFloat
    void addSymbol(java.lang.String) -> addSymbol
    int finishMessage(java.lang.String,java.lang.String) -> finishMessage
    void unbindSymbol(long) -> unbindSymbol
    long openFile(java.lang.String,java.lang.String) -> openFile
    void closeFile(long) -> closeFile
    int getDollarZero(long) -> getDollarZero
org.puredata.core.PdMidiReceiver -> org.puredata.core.a:
org.puredata.core.PdReceiver -> org.puredata.core.b:
org.puredata.core.utils.IoUtils -> org.puredata.core.a.a:
    java.util.List extractZipResource$77f93228(java.io.InputStream,java.io.File) -> a
processing.core.PApplet -> processing.core.PApplet:
    processing.core.PGraphics g -> a
    int screenWidth -> b
    int screenHeight -> c
    java.lang.String sketchPath -> k
    boolean surfaceReady -> l
    boolean surfaceChanged -> d
    int width -> e
    int height -> f
    int mouseX -> m
    int mouseY -> n
    float motionX -> o
    float motionY -> p
    float motionPressure -> q
    int pmouseX -> r
    int pmouseY -> s
    float pmotionX -> t
    float pmotionY -> u
    int dmouseX -> v
    int dmouseY -> w
    float dmotionX -> x
    float dmotionY -> y
    int emouseX -> z
    int emouseY -> A
    float emotionX -> B
    float emotionY -> C
    boolean firstMotion -> D
    boolean mousePressed -> E
    android.os.Handler handler -> F
    char key -> G
    int keyCode -> H
    boolean keyPressed -> I
    boolean focused -> J
    boolean windowFocused -> K
    boolean viewFocused -> L
    long millisOffset -> M
    float frameRate -> g
    long frameRateLastNanos -> N
    float frameRateTarget -> O
    long frameRatePeriod -> P
    boolean looping -> h
    boolean redraw -> Q
    int frameCount -> i
    boolean finished -> R
    boolean paused -> S
    android.view.SurfaceView surfaceView -> j
    boolean exitCalled -> T
    java.lang.Thread thread -> U
    boolean external -> V
    java.lang.Object motionLock -> W
    processing.core.PApplet$PMotionEvent[] motionEventQueue -> X
    int motionEventCount -> Y
    android.view.KeyEvent[] keyEventQueue -> Z
    int keyEventCount -> aa
    android.text.format.Time time -> ab
    int perlin_octaves -> ac
    float perlin_amp_falloff -> ad
    int requestImageMax -> ae
    byte[] ICON_IMAGE -> af
    void onCreate(android.os.Bundle) -> onCreate
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    android.view.SurfaceHolder getSurfaceHolder() -> a_
    void surfaceWindowFocusChanged(boolean) -> a
    boolean surfaceTouchEvent(android.view.MotionEvent) -> a
    boolean surfaceKeyDown(int,android.view.KeyEvent) -> a
    boolean surfaceKeyUp(int,android.view.KeyEvent) -> b
    int sketchWidth() -> b
    int sketchHeight() -> c
    java.lang.String sketchRenderer() -> d
    java.lang.String sketchColordepth() -> b_
    void setup() -> f
    void draw() -> g
    processing.core.PImage createImage$3667cdc8(int,int) -> a
    processing.core.PImage createImage$37df77b1(int,int,int) -> a
    void run() -> run
    void handleDraw() -> h
    void dequeueMotionEvents() -> u
    void handleKeyEvent(android.view.KeyEvent) -> a
    void checkKeyEvent(android.view.KeyEvent) -> b
    void frameRate$133aeb() -> i
    void println(java.lang.String) -> a
    int abs(int) -> a
    float sqrt(float) -> a
    int max(int,int) -> b
    int min(int,int) -> c
    int floor(float) -> b
    int round(float) -> c
    float dist$7b59a85b$483d241b() -> j
    processing.core.PFont createDefaultFont(float) -> d
    void arrayCopy(java.lang.Object,int,java.lang.Object,int,int) -> a
    void arrayCopy(java.lang.Object,java.lang.Object,int) -> a
    void arrayCopy(java.lang.Object,java.lang.Object) -> a
    int[] expand(int[]) -> a
    java.lang.Object expand(java.lang.Object) -> a
    int parseInt(java.lang.String) -> b
    int parseInt$505cff29(java.lang.String) -> c
    int color(float,float,float) -> a
    void tellPDE(java.lang.String) -> d
    void onStart() -> onStart
    void onStop() -> onStop
    void hint(int) -> b
    void line(float,float,float,float) -> a
    void rectMode(int) -> c
    void rect$4098370b(float,float,float) -> b
    void ellipseMode$13462e() -> k
    void image$10264f1b(processing.core.PImage,float,float) -> a
    void textMode$13462e() -> l
    void pushStyle() -> m
    void popStyle() -> n
    void stroke$255e752(int) -> d
    void stroke$4098370b() -> o
    void fill$255e752() -> p
    void fill$4098370b() -> q
    void background$13462e() -> r
    void colorMode$255e752() -> s
    void colorMode$3b79ad2e() -> t
    float red(int) -> e
    float green(int) -> f
    float blue(int) -> g
processing.core.PApplet$PMotionEvent -> processing.core.n:
    int action -> a
    float motionX -> b
    float motionY -> c
    float motionPressure -> d
    int mouseX -> e
    int mouseY -> f
    processing.core.PApplet this$0 -> g
processing.core.PApplet$RendererChangeException -> processing.core.u:
processing.core.PApplet$SketchSurfaceView -> processing.core.l:
    processing.core.PGraphics getGraphics() -> a
processing.core.PApplet$SketchSurfaceView2D -> processing.core.a:
    processing.core.PGraphicsAndroid2D g2 -> a
    android.view.SurfaceHolder surfaceHolder -> b
    processing.core.PApplet this$0 -> c
    processing.core.PGraphics getGraphics() -> a
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
processing.core.PApplet$SketchSurfaceView3D -> processing.core.h:
    processing.core.PGraphicsAndroid3D g3 -> a
    android.view.SurfaceHolder surfaceHolder -> b
    processing.core.PApplet this$0 -> c
    processing.core.PGraphics getGraphics() -> a
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
processing.core.PFont -> processing.core.m:
    processing.core.PFont$Glyph[] glyphs -> h
    java.lang.String name -> i
    java.lang.String psname -> j
    int size -> a
    boolean smooth -> k
    int ascent -> b
    int descent -> c
    int[] ascii -> l
    boolean lazy -> m
    android.graphics.Typeface typeface -> n
    boolean subsetting -> o
    android.graphics.Bitmap lazyBitmap -> d
    android.graphics.Canvas lazyCanvas -> e
    android.graphics.Paint lazyPaint -> f
    int[] lazySamples -> g
    processing.core.PTexture[] textures -> p
    char[] EXTRA_CHARS -> q
    char[] CHARSET -> r
    java.util.HashMap typefaceMap -> s
    java.lang.String[] fontList -> t
    android.graphics.Typeface getTypeface() -> a
    android.graphics.Typeface findTypeface(java.lang.String) -> a
    float ascent() -> b
    float descent() -> c
processing.core.PFont$Glyph -> processing.core.s:
    processing.core.PImage image -> a
    int value -> b
    int height -> c
    int width -> d
    int setWidth -> e
    int topExtent -> f
    int leftExtent -> g
    boolean fromStream -> h
    processing.core.PFont this$0 -> i
processing.core.PFramebuffer -> processing.core.f:
    processing.core.PApplet parent -> a
    processing.core.PGraphicsAndroid3D a3d -> b
    javax.microedition.khronos.opengles.GL10 gl -> c
    javax.microedition.khronos.opengles.GL11ExtensionPack gl11xp -> d
    int glFboID -> e
    int glDepthBufferID -> f
    int glStencilBufferID -> g
    int width -> h
    int height -> i
    int numColorBuffers -> j
    int[] colorBufferAttchPoints -> k
    int[] glColorBufferTargets -> l
    int[] glColorBufferIDs -> m
    boolean screenFb -> n
    boolean noDepth -> o
    boolean FboMode -> p
    processing.core.PTexture backupTexture -> q
    java.nio.IntBuffer pixelBuffer -> r
    void delete() -> a
    void setColorBuffer(processing.core.PTexture) -> a
    void addDepthBuffer(int) -> a
    void addStencilBuffer(int) -> b
    void bind() -> b
    void finish() -> c
    void copyToTexture(java.nio.IntBuffer,int,int) -> a
    void allocatePixelBuffer() -> d
    void deleteFramebuffer() -> e
processing.core.PGraphics -> processing.core.v:
    int width1 -> E
    int height1 -> F
    boolean smooth -> G
    boolean settingsInited -> H
    boolean primarySurface -> I
    boolean[] hints -> J
    int colorMode -> K
    float colorModeX -> L
    float colorModeY -> M
    float colorModeZ -> N
    float colorModeA -> i
    boolean colorModeScale -> j
    boolean colorModeDefault -> k
    boolean tint -> O
    int tintColor -> P
    boolean tintAlpha -> l
    float tintR -> m
    float tintG -> n
    float tintB -> o
    float tintA -> p
    int tintRi -> q
    int tintGi -> r
    int tintBi -> s
    int tintAi -> t
    boolean fill -> Q
    int fillColor -> R
    boolean fillAlpha -> u
    float fillR -> S
    float fillG -> T
    float fillB -> U
    float fillA -> V
    int fillRi -> v
    int fillGi -> w
    int fillBi -> x
    int fillAi -> y
    boolean stroke -> W
    int strokeColor -> X
    boolean strokeAlpha -> z
    float strokeR -> A
    float strokeG -> B
    float strokeB -> C
    float strokeA -> D
    int strokeRi -> aH
    int strokeGi -> aI
    int strokeBi -> aJ
    int strokeAi -> aK
    float strokeWeight -> Y
    int strokeJoin -> Z
    int strokeCap -> aa
    int rectMode -> aL
    int ellipseMode -> aM
    int shapeMode -> aN
    int imageMode -> aO
    processing.core.PFont textFont -> ab
    int textAlign -> aP
    int textAlignY -> aQ
    int textMode -> aR
    float textSize -> ac
    float textLeading -> ad
    float ambientR -> ae
    float ambientG -> af
    float ambientB -> ag
    float specularR -> ah
    float specularG -> ai
    float specularB -> aj
    float emissiveR -> ak
    float emissiveG -> al
    float emissiveB -> am
    float shininess -> an
    processing.core.PStyle[] styleStack -> aS
    int styleStackDepth -> aT
    int backgroundColor -> ao
    boolean backgroundAlpha -> aU
    float backgroundR -> ap
    float backgroundG -> aq
    float backgroundB -> ar
    float backgroundA -> aV
    int backgroundRi -> aW
    int backgroundGi -> aX
    int backgroundBi -> aY
    int backgroundAi -> aZ
    android.graphics.Bitmap bitmap -> as
    float calcR -> at
    float calcG -> au
    float calcB -> av
    float calcA -> aw
    int calcRi -> ba
    int calcGi -> bb
    int calcBi -> bc
    int calcAi -> bd
    int calcColor -> be
    boolean calcAlpha -> bf
    float[] cacheHsbValue -> bg
    int shape -> ax
    float[][] vertices -> ay
    int vertexCount -> az
    boolean bezierInited -> bh
    int bezierDetail -> bi
    processing.core.PMatrix3D bezierBasisMatrix -> bj
    boolean curveInited -> bk
    int curveDetail -> bl
    float curveTightness -> bm
    int curveVertexCount -> aA
    float[] sinLUT -> bn
    float[] cosLUT -> bo
    char[] textBuffer -> bp
    char[] textWidthBuffer -> bq
    boolean edge -> br
    boolean autoNormal -> aB
    float normalX -> aC
    float normalY -> aD
    float normalZ -> aE
    int textureMode -> bs
    float textureU -> aF
    float textureV -> aG
    processing.core.PImage textureImage -> bt
    int sphereDetailU -> bu
    int sphereDetailV -> bv
    java.util.HashMap warnings -> bw
    void setParent(processing.core.PApplet) -> a
    void setPrimary(boolean) -> a
    void setSize(int,int) -> a
    void allocate() -> a
    void dispose() -> b
    void requestDraw() -> c
    void beginDraw() -> d
    void endDraw() -> e
    void checkSettings() -> K
    void defaultSettings() -> z
    void reapplySettings() -> L
    void hint(int) -> g
    void beginShape(int) -> a
    void textureMode$13462e() -> M
    void texture(processing.core.PImage) -> a
    void vertexCheck() -> A
    void vertex(float,float) -> a
    void vertex(float,float,float,float) -> a
    void vertexTexture(float,float) -> b
    void endShape$13462e() -> f
    void line(float,float,float,float) -> b
    void triangle(float,float,float,float,float,float) -> a
    void quad(float,float,float,float,float,float,float,float) -> a
    void rectMode(int) -> i
    void rect(float,float,float,float) -> d
    void rectImpl(float,float,float,float) -> c
    void ellipseMode$13462e() -> N
    void smooth() -> g
    void noSmooth() -> h
    void image$10264f1b(processing.core.PImage,float,float) -> a
    void imageImpl$4e22df25(processing.core.PImage,float,float,float,float,int,int) -> a
    void textAlign(int,int) -> b
    float textAscent() -> O
    float textDescent() -> P
    void textFont(processing.core.PFont) -> a
    void textFont(processing.core.PFont,float) -> a
    void textMode(int) -> j
    boolean textModeCheck(int) -> b
    void textSize(float) -> a
    void pushMatrix() -> i
    void popMatrix() -> j
    void resetMatrix() -> k
    void pushStyle() -> Q
    void popStyle() -> R
    void strokeWeight(float) -> b
    void strokeJoin(int) -> d
    void strokeCap(int) -> c
    void stroke(int) -> f
    void stroke$255e752(int) -> k
    void stroke$4098370b() -> S
    void strokeFromCalc() -> l
    void tint(int) -> p
    void tintFromCalc() -> m
    void fill(int) -> q
    void fill$255e752() -> T
    void fill$4098370b() -> U
    void fillFromCalc() -> n
    void ambientFromCalc() -> B
    void specularFromCalc() -> C
    void shininess(float) -> c
    void emissiveFromCalc() -> D
    void noLights() -> E
    void lightFalloff$483d242b() -> F
    void lightSpecular$483d242b() -> G
    void background(int) -> l
    void backgroundImpl() -> o
    void colorMode$255e752(float) -> d
    void colorMode(int,float,float,float) -> a
    void colorMode(int,float,float,float,float) -> a
    void colorCalc(int) -> r
    void colorCalc$255e752(int) -> s
    void colorCalc(float,float) -> c
    void colorCalc(float,float,float) -> a
    void colorCalc(float,float,float,float) -> e
    void colorCalcARGB(int,float) -> a
    int color(float,float,float) -> b
    float red(int) -> m
    float green(int) -> n
    float blue(int) -> o
    void showWarning(java.lang.String) -> a
    void showMethodWarning(java.lang.String) -> b
    void showVariationWarning(java.lang.String) -> c
    void showMissingWarning(java.lang.String) -> d
    void defaultFontOrDeath(java.lang.String) -> e
    void defaultFontOrDeath(java.lang.String,float) -> a
    boolean is3D() -> J
    void blend(int) -> h
    void noBlend() -> H
processing.core.PGraphicsAndroid2D -> processing.core.g:
    android.graphics.Canvas canvas -> i
    boolean breakShape -> j
    float[] transform -> k
    android.graphics.Path path -> l
    android.graphics.RectF rect -> m
    android.graphics.Paint fillPaint -> n
    android.graphics.Paint strokePaint -> o
    android.graphics.Paint tintPaint -> p
    android.graphics.Rect imageImplSrcRect -> q
    android.graphics.RectF imageImplDstRect -> r
    float[] screenPoint -> s
    int[] getset -> t
    void setSize(int,int) -> a
    void allocate() -> a
    void dispose() -> b
    void requestDraw() -> c
    void beginDraw() -> d
    void endDraw() -> e
    void beginShape(int) -> a
    void texture(processing.core.PImage) -> a
    void vertex(float,float) -> a
    void vertex(float,float,float,float) -> a
    void endShape$13462e() -> f
    void line(float,float,float,float) -> b
    void triangle(float,float,float,float,float,float) -> a
    void quad(float,float,float,float,float,float,float,float) -> a
    void rectImpl(float,float,float,float) -> c
    void drawPath() -> x
    void smooth() -> g
    void noSmooth() -> h
    void imageImpl$4e22df25(processing.core.PImage,float,float,float,float,int,int) -> a
    void textFont(processing.core.PFont) -> a
    boolean textModeCheck(int) -> b
    void textSize(float) -> a
    void pushMatrix() -> i
    void popMatrix() -> j
    void resetMatrix() -> k
    void strokeCap(int) -> c
    void strokeJoin(int) -> d
    void strokeWeight(float) -> b
    void strokeFromCalc() -> l
    void tintFromCalc() -> m
    void fillFromCalc() -> n
    void backgroundImpl() -> o
    void loadPixels() -> p
    void updatePixels() -> q
    void set(int,int,int) -> a
processing.core.PGraphicsAndroid3D -> processing.core.t:
    processing.core.PGraphicsAndroid3D$A3DRenderer renderer -> aH
    javax.microedition.khronos.opengles.GL10 gl -> i
    javax.microedition.khronos.opengles.GL11 gl11 -> j
    javax.microedition.khronos.opengles.GL11Ext gl11x -> k
    javax.microedition.khronos.opengles.GL11ExtensionPack gl11xp -> l
    float cameraFOV -> aI
    float cameraX -> aJ
    float cameraY -> aK
    float cameraZ -> aL
    float cameraNear -> aM
    float cameraFar -> aN
    float cameraAspect -> aO
    float[] glmodelview -> aP
    float[] glmodelviewInv -> aQ
    float[] glprojection -> aR
    float[] pcamera -> aS
    float[] pcameraInv -> aT
    processing.core.PMatrix3D modelview -> aU
    processing.core.PMatrix3D modelviewInv -> aV
    processing.core.PMatrix3D projection -> aW
    processing.core.PMatrix3D camera -> aX
    processing.core.PMatrix3D cameraInv -> aY
    boolean modelviewUpdated -> aZ
    boolean projectionUpdated -> ba
    boolean projectionMode -> bb
    boolean matricesAllocated -> bc
    boolean manipulatingCamera -> bd
    boolean scalingDuringCamManip -> be
    boolean lights -> bf
    int lightCount -> bg
    int[] lightType -> bh
    float[][] lightPosition -> bi
    float[][] lightNormal -> bj
    float[] lightFalloffConstant -> bk
    float[] lightFalloffLinear -> bl
    float[] lightFalloffQuadratic -> bm
    float[] lightSpotAngle -> bn
    float[] lightSpotAngleCos -> bo
    float[] lightSpotConcentration -> bp
    float[][] lightDiffuse -> bq
    float[][] lightSpecular -> br
    float[] currentLightSpecular -> bs
    float currentLightFalloffConstant -> bt
    float currentLightFalloffLinear -> bu
    float currentLightFalloffQuadratic -> bv
    float[] zeroLight -> bw
    float[] baseLight -> bx
    boolean lightsAllocated -> by
    int numMultitextures -> bz
    int numTexBuffers -> bA
    int multitexureBlendMode -> bB
    processing.core.PTexture[] renderTextures -> bC
    processing.core.PImage[] multitextureImages -> bD
    processing.core.PImage[] multitextureImages0 -> bE
    float[] multitextureU -> bF
    float[] multitextureV -> bG
    float[][] vertexU -> bH
    float[][] vertexV -> bI
    processing.core.PImage[][] vertexTex -> bJ
    float[] renderUa -> bK
    float[] renderVa -> bL
    float[] renderUb -> bM
    float[] renderVb -> bN
    float[] renderUc -> bO
    float[] renderVc -> bP
    int[][] points -> bQ
    int lineCount -> bR
    int[][] lines -> bS
    int triangleCount -> bT
    int[][] triangles -> bU
    java.nio.IntBuffer vertexBuffer -> bV
    java.nio.IntBuffer colorBuffer -> bW
    java.nio.IntBuffer normalBuffer -> bX
    java.nio.IntBuffer[] texCoordBuffer -> bY
    int[] vertexArray -> bZ
    int[] colorArray -> ca
    int[] normalArray -> cb
    int[][] texCoordArray -> cc
    java.nio.IntBuffer getsetBuffer -> cd
    processing.core.PTexture getsetTexture -> ce
    boolean buffersAllocated -> cf
    java.nio.IntBuffer textVertexBuffer -> cg
    java.nio.IntBuffer textTexCoordBuffer -> ch
    int[] textVertexArray -> ci
    int[] textTexCoordArray -> cj
    int textVertexCount -> ck
    int shapeFirst -> cl
    int shapeLast -> cm
    int[] vertexOrder -> cn
    int pathCount -> co
    int[] pathOffset -> cp
    int[] pathLength -> cq
    int faceCount -> cr
    int[] faceOffset -> cs
    int[] faceLength -> ct
    processing.core.PImage[][] faceTextures -> cu
    float[] colorFloats -> cv
    java.nio.IntBuffer pixelBuffer -> cw
    java.util.Set glTextureObjects -> cx
    java.util.Set glVertexBuffers -> cy
    java.util.Set glFrameBuffers -> cz
    java.util.Set glRenderBuffers -> cA
    boolean recordingShape -> cB
    int numRecordedTextures -> cC
    processing.core.PShape3D recordedShape -> cD
    java.util.ArrayList recordedVertices -> cE
    java.util.ArrayList recordedColors -> cF
    java.util.ArrayList recordedNormals -> cG
    java.util.ArrayList[] recordedTexCoords -> cH
    java.util.ArrayList recordedChildren -> cI
    java.util.Stack fbStack -> cJ
    processing.core.PFramebuffer screenFramebuffer -> cK
    processing.core.PFramebuffer currentFramebuffer -> cL
    processing.core.PFramebuffer offscreenFramebuffer -> cM
    processing.core.PImage[] offscreenImages -> cN
    processing.core.PTexture[] offscreenTextures -> cO
    int offscreenIndex -> cP
    int[] offscreenTexCrop -> cQ
    int offscreenDepthBits -> m
    int offscreenStencilBits -> n
    boolean usingGLMatrixStack -> o
    processing.core.PGraphicsAndroid3D$A3DMatrixStack modelviewStack -> cR
    processing.core.PGraphicsAndroid3D$A3DMatrixStack projectionStack -> cS
    int[] screenTexCrop -> cT
    boolean clearColorBuffer -> cU
    boolean clearColorBuffer0 -> cV
    boolean blend -> cW
    int blendMode -> cX
    boolean npotTexSupported -> p
    boolean mipmapGeneration -> q
    boolean matrixGetSupported -> r
    boolean vboSupported -> s
    boolean fboSupported -> t
    boolean blendEqSupported -> u
    boolean texenvCrossbarSupported -> v
    int maxTextureSize -> w
    float maxPointSize -> x
    float maxLineWidth -> y
    int maxTextureUnits -> z
    java.lang.String OPENGL_VENDOR -> A
    java.lang.String OPENGL_RENDERER -> B
    java.lang.String OPENGL_VERSION -> C
    boolean BIG_ENDIAN -> D
    void setPrimary(boolean) -> a
    void setSize(int,int) -> a
    void allocate() -> a
    void delete() -> r
    void dispose() -> b
    int createGLResource(int) -> f
    void deleteGLResource(int,int) -> b
    void createScreenTexture() -> V
    void drawScreenTexture() -> W
    void copyToScreenTexture(java.nio.IntBuffer) -> a
    void createOffscreenFramebuffer() -> X
    void drawOffscreenTexture(int) -> p
    void swapOffscreenIndex() -> Y
    void pushFramebuffer() -> x
    void setFramebuffer(processing.core.PFramebuffer) -> a
    void popFramebuffer() -> y
    void requestDraw() -> c
    void beginDraw() -> d
    void endDraw() -> e
    void defaultSettings() -> z
    void hint(int) -> g
    void beginShape(int) -> a
    void texture(processing.core.PImage) -> a
    void vertex(float,float,float,float) -> a
    void vertexCheck() -> A
    void clearMultitextures() -> Z
    void clearMultitextures0() -> aa
    void endShape$13462e() -> f
    void addLineBreak() -> ab
    void addLine(int,int) -> c
    void renderLines$255f295(int) -> q
    void addTriangle(int,int,int) -> b
    void expandBuffers() -> ac
    void smooth() -> g
    void noSmooth() -> h
    void pushMatrix() -> i
    void popMatrix() -> j
    void resetMatrix() -> k
    void copyGLArrayToPMatrix(float[],processing.core.PMatrix3D) -> a
    void strokeWeight(float) -> b
    void strokeJoin(int) -> d
    void strokeCap(int) -> c
    void fillFromCalc() -> n
    void ambientFromCalc() -> B
    void specularFromCalc() -> C
    void shininess(float) -> c
    void emissiveFromCalc() -> D
    void noLights() -> E
    void lightFalloff$483d242b() -> F
    void lightSpecular$483d242b() -> G
    void glEnableLights() -> ad
    void glLightAmbient(int) -> r
    void glLightNoAmbient(int) -> s
    void glLightNoSpot(int) -> t
    void glLightDiffuse(int) -> u
    void glLightNoDiffuse(int) -> v
    void glLightDirection(int) -> w
    void glLightEnable(int) -> x
    void glLightFalloff(int) -> y
    void glLightPosition(int) -> z
    void glLightSpecular(int) -> A
    void glLightNoSpecular(int) -> B
    void backgroundImpl() -> o
    void calcColorBuffer() -> ae
    void report(java.lang.String) -> d
    void loadPixels() -> p
    void updatePixels() -> q
    void loadTexture() -> s
    void set(int,int,int) -> a
    void drawTexture$6f78e1db(processing.core.PTexture,int,int,int,int,int,int) -> a
    void drawTexture(processing.core.PTexture,int[],int,int,int,int) -> a
    void copyToTexture$4d3739ad(processing.core.PTexture,java.nio.IntBuffer,int,int) -> a
    void blend(int) -> h
    void noBlend() -> H
    void setMultitextureBlend(processing.core.PTexture[],int) -> a
    void modulateWithPrimaryColor$606618e2(processing.core.PTexture) -> a
    void clearMultitextureBlend(int) -> C
    android.opengl.GLSurfaceView$Renderer getRenderer() -> I
    android.opengl.GLSurfaceView$EGLConfigChooser getConfigChooser(int,int,int,int,int,int) -> a
    float abs(float) -> e
    boolean is3D() -> J
processing.core.PGraphicsAndroid3D$A3DConfigChooser -> processing.core.b:
    int redTarget -> a
    int greenTarget -> b
    int blueTarget -> c
    int alphaTarget -> d
    int depthTarget -> e
    int stencilTarget -> f
    int redBits -> g
    int greenBits -> h
    int blueBits -> i
    int alphaBits -> j
    int depthBits -> k
    int stencilBits -> l
    int[] tempValue -> m
    int EGL_OPENGL_ES_BIT -> n
    int[] configAttribsGL -> o
    processing.core.PGraphicsAndroid3D this$0 -> p
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseBestConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> a
    int findConfigAttrib$6739ccb4(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int) -> a
processing.core.PGraphicsAndroid3D$A3DMatrixStack -> processing.core.c:
    java.util.Stack matrixStack -> a
    float[] current -> b
    processing.core.PGraphicsAndroid3D this$0 -> c
    void push() -> a
    void pop() -> b
    void set(float[]) -> a
processing.core.PGraphicsAndroid3D$A3DRenderer -> processing.core.d:
    processing.core.PGraphicsAndroid3D this$0 -> a
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
processing.core.PImage -> processing.core.r:
    int format -> a
    int[] pixels -> b
    int width -> c
    int height -> d
    processing.core.PApplet parent -> e
    android.graphics.Bitmap bitmap -> f
    processing.core.PTexture texture -> g
    processing.core.PTexture$Parameters texParams -> i
    boolean modified -> h
    int mx1 -> j
    int my1 -> k
    int mx2 -> l
    int my2 -> m
    byte[] TIFF_HEADER -> n
    void delete() -> r
    void loadTexture() -> s
    void loadTexture$13462e() -> t
    processing.core.PTexture getTexture() -> u
    void pixelsToTexture() -> a
    processing.core.PTexture createTexture() -> v
    void createTexParams$13462e() -> w
    void createTexParams$255f295(int) -> e
    void loadPixels() -> p
    void updatePixels() -> q
    void updatePixelsImpl(int,int,int,int) -> a
    java.lang.Object clone() -> clone
    void set(int,int,int) -> a
processing.core.PMatrix3D -> processing.core.q:
    float m00 -> a
    float m01 -> b
    float m02 -> c
    float m03 -> d
    float m10 -> e
    float m11 -> f
    float m12 -> g
    float m13 -> h
    float m20 -> i
    float m21 -> j
    float m22 -> k
    float m23 -> l
    float m30 -> m
    float m31 -> n
    float m32 -> o
    float m33 -> p
    void set$52d32e8b(float,float,float,float,float,float,float,float,float,float,float,float) -> a
processing.core.PShape -> processing.core.o:
    java.lang.String name -> a
    int family -> b
    boolean visible -> d
    float strokeWeight -> c
    boolean style -> e
processing.core.PShape3D -> processing.core.k:
    int[] glTexCoordBufferID -> d
    processing.core.PTexture[] renderTextures -> e
    boolean[] texCoordSet -> f
    boolean readFromOBJ -> g
    int firstVertex -> h
    int lastVertex -> i
    int glMode -> j
    boolean pointSprites -> k
    processing.core.PImage[] textures -> l
    float maxSpriteSize -> m
    float[] spriteDistAtt -> n
    processing.core.PShape createChild(java.lang.String,int,int,int,float,processing.core.PImage[]) -> a
processing.core.PStyle -> processing.core.i:
    int imageMode -> a
    int rectMode -> b
    int ellipseMode -> c
    int shapeMode -> d
    int colorMode -> e
    float colorModeX -> f
    float colorModeY -> g
    float colorModeZ -> h
    float colorModeA -> i
    boolean tint -> j
    int tintColor -> k
    boolean fill -> l
    int fillColor -> m
    boolean stroke -> n
    int strokeColor -> o
    float strokeWeight -> p
    int strokeCap -> q
    int strokeJoin -> r
    float ambientR -> s
    float ambientG -> t
    float ambientB -> u
    float specularR -> v
    float specularG -> w
    float specularB -> x
    float emissiveR -> y
    float emissiveG -> z
    float emissiveB -> A
    float shininess -> B
    processing.core.PFont textFont -> C
    int textAlign -> D
    int textAlignY -> E
    int textMode -> F
    float textSize -> G
    float textLeading -> H
processing.core.PTexture -> processing.core.j:
    int width -> a
    int height -> b
    processing.core.PApplet parent -> c
    processing.core.PGraphicsAndroid3D a3d -> d
    javax.microedition.khronos.opengles.GL10 gl -> e
    int glID -> f
    int glTarget -> g
    int glFormat -> h
    int glMinFilter -> i
    int glMagFilter -> j
    int glWrapS -> k
    int glWrapT -> l
    int glWidth -> m
    int glHeight -> n
    boolean usingMipmaps -> o
    float maxTexCoordU -> p
    float maxTexCoordV -> q
    boolean flippedX -> r
    boolean flippedY -> s
    int[] tempPixels -> t
    processing.core.PFramebuffer tempFbo -> u
    void delete() -> a
    void set(int[]) -> a
    void set(int[],int,int,int,int) -> a
    void set$156292e0(int[],int,int,int,int) -> b
    int getGLWidth() -> b
    int getGLHeight() -> c
    int getGLID() -> d
    int getGLTarget() -> e
    float getMaxTexCoordU() -> f
    float getMaxTexCoordV() -> g
    boolean isFlippedX() -> h
    boolean isFlippedY() -> i
    void setFlippedY$1385ff() -> j
    int nextPowerOfTwo(int) -> a
    void convertToRGBA$326d428e(int[],int[]) -> a
    void convertToARGB$7543866e(int[],int[]) -> b
    void createTexture(int,int) -> a
    void deleteTexture() -> k
    void setTexels(int,int,int,int,int[]) -> a
processing.core.PTexture$Parameters -> processing.core.p:
    int target -> a
    int format -> b
    int sampling -> c
    int wrapU -> d
    int wrapV -> e
processing.core.PVector -> processing.core.e:
    float x -> a
    float y -> b
    float z -> c
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
